import 'package:flushbar/flushbar.dart';
import 'package:flushbar/flushbar_helper.dart';
import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:${appName}/config/string_resources.dart';
import 'package:${appName}${relative}/presentation/bloc/bloc.dart';

class ${upperName}Screen extends StatefulWidget {
  const ${upperName}Screen({Key? key}) : super(key: key);

  @override
  ${upperName}ScreenState createState() => ${upperName}ScreenState();
}

class ${upperName}ScreenState extends State<${upperName}Screen> 
    with SingleTickerProviderStateMixin {
  //
  @override
  void initState() {
    super.initState();
    BlocProvider.of<${upperName}Bloc>(context).add(Load${upperName}());
  }

  @override
  void dispose() {
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return SingleChildScrollView(
      child: _build(context),
    );
  }

  Widget _build(BuildContext context) {
    late Flushbar<bool> flushObj;

    return BlocListener<${upperName}Bloc, ${upperName}State>(
      listener: (context, state) {
        if (state is ${upperName}Loading) {
          flushObj = Flushbar<bool>(
            message: StringResources.DATA_LOADING,
            showProgressIndicator: true,
          )..show(context);
          //
        } else if (state is ${upperName}Loaded) {
          flushObj.dismiss(true);
        } else if (state is ${upperName}Failure) {
         catchAllException(context, state.error, true);
        }
      },
      child: BlocBuilder<${upperName}Bloc, ${upperName}State>(
        builder: (context, state) {
          if (state is ${upperName}Loading) {
            return Center(
              child: CircularProgressIndicator(),
            );
          } else if (state is ${upperName}Loaded) {
            return Text('Loaded');
          }

          return Container();
        },
      ),
    );
  }


}